generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  Recruiter
  Candidate
}

enum jobType {
  Remote
  OnSite
}

enum applicationStatus {
  Rejected
  Applied
  Interviewing
  Hired
}

model User {
  id             String           @unique @default(uuid())
  fullName       String           @default("")
  email          String           @unique
  password       String
  experience     String           @default("")
  education      String           @default("")
  skills         String           @default("")
  resume         String           @default("")
  bio            String           @default("")
  avatar         String           @default("")
  role           Role
  createdJobs    Job[]
  jobApplication jobApplication[]
  savedJobs      SavedJobs[]
}

model Company {
  id   String @unique @default(uuid())
  name String
  logo String
  Job  Job[]
}

model Job {
  id             String           @unique @default(uuid())
  recruiterId    String
  companyId      String?
  jobRole        String           @default("")
  title          String
  description    String
  location       String
  type           jobType
  requirement    String
  isOpen         Boolean          @default(true)
  createdAt      DateTime         @default(now())
  recruiter      User             @relation(fields: [recruiterId], references: [id], onDelete: Cascade)
  company        Company?         @relation(fields: [companyId], references: [id], onDelete: Cascade)
  jobApplication jobApplication[]
  savedJobs      SavedJobs[]
  
}

model SavedJobs {
  id        String   @unique @default(uuid())
  userId    String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  jobId     String
  job       Job      @relation(fields: [jobId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now())
}

model jobApplication {
  id          String             @unique @default(uuid())
  applicantId String
  applicant   User               @relation(fields: [applicantId], references: [id], onDelete: Cascade)
  jobId       String?
  job         Job?               @relation(fields: [jobId], references: [id], onDelete: Cascade)
  status      applicationStatus? @default(Applied)
  isApplied   Boolean            @default(true)
  resume      String
  skills      String
  experience  String
  education   String
  createdAt   DateTime           @default(now())
}
